@page  "/Account"
    <!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2 text-center">
                <div class="breadcrumb-text">
                    <p>E-Ticaret Websitesi</p>
                    <h1>Hesabım</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end breadcrumb section -->
<div class="forAccountBackground">
    <!-- Start My Account  -->

    <div class="forAccountBackgroundPadding"></div>
    <div class="container emp-profile">
        <div class="row">

            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-12">
                        <div class="profile-head">
                            <h5>
                                @_userModel.Username
                            </h5>
                            <h6>
                                @_userModel.FirstName @_userModel.LastName
                            </h6>

                            <div class="nav nav-tabs">
                                <a class="nav-link active">Hakkında</a>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-10">
                        <div class="tab-content profile-tab" id="myTabContent">
                            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>İsim</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_userModel.FirstName</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Soyisim</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_userModel.LastName</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Email</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_userModel.Email</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Telefon</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_userModel.Phone</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Ödeme Yöntemi Adeti</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_paymentMethodModels.Count</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Sipariş Yöntemi Adeti</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p>@_orderModels.Count</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="profile-img">
                    @if (!string.IsNullOrEmpty(_userModel.ProfileImagePath))
                    {
                        <img src="@("http://localhost:5002/pics" + _userModel.ProfileImagePath)" />
                    }
                    else
                    {
                        <img src="/assets/img/default-profile.png" alt="" />
                    }

                    <div class="file btn btn-lg btn-primary">
                        Fotoğrafı Değiştir
                        <InputFile OnChange="(e)=>HandleSelectedFile(e)" type="file" name="file" style="position: absolute; opacity: 0; right: 0; top: 0;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="forAccountBackgroundPadding"></div>
    <!-- End My Account -->
</div>
@code {
    private bool isLoggedIn = false;

    [CascadingParameter]
    IModalService Modal { get; set; }
    [Inject]
    public IJSRuntime jsRuntime { get; set; }
    [Inject]
    IIdentityService identityService { get; set; }
    [Inject]
    StateManager stateManager { get; set; }
    [Inject]
    NavigationManager navigationManager { get; set; }
    [Inject]
    IOrderService orderService { get; set; }


    UserDTO _userModel { get; set; }
    PaginatedViewModel<OrderDTO> _orderModels { get; set; } = new PaginatedViewModel<OrderDTO>();
    PaginatedViewModel<PaymentMethod> _paymentMethodModels { get; set; } = new PaginatedViewModel<PaymentMethod>();

    IBrowserFile pictureFiles;

    protected override void OnInitialized()
    {
        isLoggedIn = identityService.IsLoggedIn;
        if (!isLoggedIn)
        {
            navigationManager.NavigateTo($"login?returnUrl={Uri.EscapeDataString(navigationManager.Uri)}", true);
        }
        GetUser();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeVoidAsync("myFunction");
            stateManager.StateChanged += async (source, property) => await StateManager_StateChanged(source, property);
        }
    }
    private async Task StateManager_StateChanged(ComponentBase component, string property)
    {
        if (property.Contains("accountPage"))
        {
            await InvokeAsync(StateHasChanged);
        }

    }
    private async void GetUser()
    {
        _userModel = identityService.GetUserModel(identityService.GetUserToken());
        _userModel.ProfileImagePath = await identityService.GetPicture(_userModel.Username);
        _orderModels = await orderService.GetOrdersDetailByBuyerName(_userModel.Username, 0,0);
        _paymentMethodModels = await orderService.GetPaymentMethodsDetailByBuyerName(_userModel.Username, 0,0);
        stateManager.UpdateContent(this, "accountPage");
    }
    private async Task HandleSelectedFile(InputFileChangeEventArgs e)
    {
        pictureFiles = e.File;
        var isChangedPicture= await identityService.ChangePicture(pictureFiles,_userModel.Username);
        ModalParameters modalParameters = new ModalParameters();
        if (isChangedPicture)
        {
            modalParameters.Add("Message", "Resim Başarılı Bir Şekilde Eklenildi.");
        }
        else
        {
            modalParameters.Add("Message", "Resim Eklenirken Hata Oluştu.");
        }
        Modal.Show<ShowMessagePopup>("Hata Mesajı", modalParameters);
        GetUser();
    }
}