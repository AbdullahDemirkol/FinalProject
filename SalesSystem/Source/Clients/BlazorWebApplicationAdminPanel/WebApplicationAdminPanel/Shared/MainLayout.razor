@inherits LayoutComponentBase

@if (isLoggedIn)
{
    <div class="page">
        <div class="sidebar">
            <NavMenu/>
        </div>

        <div class="main">
            <div class="top-row px-4">
                <button class="main-btn" @onclick="GoUserPanel">Kullanıcı Paneli</button>
                <button class="main-btn" @onclick="GoLogoutPage">Logout</button>

            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>
    </div>
}
else 
{ 
   <WebApplicationAdminPanel.Pages.Login.LoginPage></WebApplicationAdminPanel.Pages.Login.LoginPage>
}
@code{
    private bool isLoggedIn = false;
    [Inject]
    private IIdentityService _identityService { get; set; }
    [Inject]
    StateManager stateManager { get; set; }
    [Inject]
    NavigationManager navigationManager { get; set; }
    protected override void OnInitialized()
    {
        isLoggedIn = _identityService.IsLoggedIn;
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            stateManager.StateChanged += async (source, property) => await StateManager_StateChanged(source, property);
        }
    }

    private async Task StateManager_StateChanged(ComponentBase component, string property)
    {
        if (property== "login")
        {
            isLoggedIn = _identityService.IsLoggedIn;
            await InvokeAsync(StateHasChanged);
        }
    }
    private void GoLogoutPage()
    {
        navigationManager.NavigateTo($"logout");
    }
    private void GoUserPanel()
    {
        navigationManager.NavigateTo("https://localhost:44345/");
    }
}