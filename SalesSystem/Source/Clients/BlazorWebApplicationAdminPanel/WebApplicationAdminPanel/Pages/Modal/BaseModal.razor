<h3>BaseModal</h3>

@code {
    [Parameter]
    public string Message { get; set; }
    [Parameter]
    public string OkText { get; set; }
    [Parameter]
    public string CancelText { get; set; }
    [Parameter]
    public string YesText { get; set; }
    [Parameter]
    public string NoText { get; set; }

    [CascadingParameter]
    BlazoredModalInstance modalInstance { get; set; }

    protected void ConfirmClicked()
    {
        modalInstance.Close(ModalResult.Ok<string>(""));
    }
    protected void CancelClicked()
    {
        modalInstance.Close(ModalResult.Cancel());
    }
    protected void UpdateProductClicked(ProductDTO productDTO)
    {
        modalInstance.Close(ModalResult.Ok<ProductDTO>(productDTO));
    }
    protected void DeletePictureClicked(string picturePath, int id)
    {
        modalInstance.Close(ModalResult.Ok<(string, int)>((picturePath, id)));
    }
    protected void CancelUser(bool isDeletePicture)
    {
        if (isDeletePicture)
        {
            modalInstance.Close(ModalResult.Ok<bool>(isDeletePicture));
        }
        else
        {
            CancelClicked();
        }
    }
    protected void UpdateUserClicked(UserDTO updateUserModel, string newPas)
    {
        if (!string.IsNullOrEmpty(newPas))
        {
            updateUserModel.UserModel.Password = newPas;
        }
        modalInstance.Close(ModalResult.Ok<(UserDTO, string)>((updateUserModel, newPas)));
    }

}
